/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VariableValueDto from './VariableValueDto';

/**
 * The CorrelationMessageDto model module.
 * @module model/CorrelationMessageDto
 * @version 7.14.0
 */
class CorrelationMessageDto {
    /**
     * Constructs a new <code>CorrelationMessageDto</code>.
     * @alias module:model/CorrelationMessageDto
     */
    constructor() { 
        
        CorrelationMessageDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CorrelationMessageDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CorrelationMessageDto} obj Optional instance to populate.
     * @return {module:model/CorrelationMessageDto} The populated <code>CorrelationMessageDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CorrelationMessageDto();

            if (data.hasOwnProperty('messageName')) {
                obj['messageName'] = ApiClient.convertToType(data['messageName'], 'String');
            }
            if (data.hasOwnProperty('businessKey')) {
                obj['businessKey'] = ApiClient.convertToType(data['businessKey'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('withoutTenantId')) {
                obj['withoutTenantId'] = ApiClient.convertToType(data['withoutTenantId'], 'Boolean');
            }
            if (data.hasOwnProperty('processInstanceId')) {
                obj['processInstanceId'] = ApiClient.convertToType(data['processInstanceId'], 'String');
            }
            if (data.hasOwnProperty('correlationKeys')) {
                obj['correlationKeys'] = ApiClient.convertToType(data['correlationKeys'], {'String': VariableValueDto});
            }
            if (data.hasOwnProperty('localCorrelationKeys')) {
                obj['localCorrelationKeys'] = ApiClient.convertToType(data['localCorrelationKeys'], {'String': VariableValueDto});
            }
            if (data.hasOwnProperty('processVariables')) {
                obj['processVariables'] = ApiClient.convertToType(data['processVariables'], {'String': VariableValueDto});
            }
            if (data.hasOwnProperty('processVariablesLocal')) {
                obj['processVariablesLocal'] = ApiClient.convertToType(data['processVariablesLocal'], {'String': VariableValueDto});
            }
            if (data.hasOwnProperty('all')) {
                obj['all'] = ApiClient.convertToType(data['all'], 'Boolean');
            }
            if (data.hasOwnProperty('resultEnabled')) {
                obj['resultEnabled'] = ApiClient.convertToType(data['resultEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('variablesInResultEnabled')) {
                obj['variablesInResultEnabled'] = ApiClient.convertToType(data['variablesInResultEnabled'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The name of the message to deliver.
 * @member {String} messageName
 */
CorrelationMessageDto.prototype['messageName'] = undefined;

/**
 * Used for correlation of process instances that wait for incoming messages. Will only correlate to executions that belong to a process instance with the provided business key.
 * @member {String} businessKey
 */
CorrelationMessageDto.prototype['businessKey'] = undefined;

/**
 * Used to correlate the message for a tenant with the given id. Will only correlate to executions and process definitions which belong to the tenant. Must not be supplied in conjunction with a `withoutTenantId`.
 * @member {String} tenantId
 */
CorrelationMessageDto.prototype['tenantId'] = undefined;

/**
 * A Boolean value that indicates whether the message should only be correlated to executions and process definitions which belong to no tenant or not. Value may only be `true`, as `false` is the default behavior. Must not be supplied in conjunction with a `tenantId`.
 * @member {Boolean} withoutTenantId
 * @default false
 */
CorrelationMessageDto.prototype['withoutTenantId'] = false;

/**
 * Used to correlate the message to the process instance with the given id.
 * @member {String} processInstanceId
 */
CorrelationMessageDto.prototype['processInstanceId'] = undefined;

/**
 * Used for correlation of process instances that wait for incoming messages. Has to be a JSON object containing key-value pairs that are matched against process instance variables during correlation. Each key is a variable name and each value a JSON variable value object with the following properties.
 * @member {Object.<String, module:model/VariableValueDto>} correlationKeys
 */
CorrelationMessageDto.prototype['correlationKeys'] = undefined;

/**
 * Local variables used for correlation of executions (process instances) that wait for incoming messages. Has to be a JSON object containing key-value pairs that are matched against local variables during correlation. Each key is a variable name and each value a JSON variable value object with the following properties.
 * @member {Object.<String, module:model/VariableValueDto>} localCorrelationKeys
 */
CorrelationMessageDto.prototype['localCorrelationKeys'] = undefined;

/**
 * A map of variables that is injected into the triggered execution or process instance after the message has been delivered. Each key is a variable name and each value a JSON variable value object with the following properties.
 * @member {Object.<String, module:model/VariableValueDto>} processVariables
 */
CorrelationMessageDto.prototype['processVariables'] = undefined;

/**
 * A map of local variables that is injected into the triggered execution or process instance after the message has been delivered. Each key is a variable name and each value a JSON variable value object with the following properties.
 * @member {Object.<String, module:model/VariableValueDto>} processVariablesLocal
 */
CorrelationMessageDto.prototype['processVariablesLocal'] = undefined;

/**
 * A Boolean value that indicates whether the message should be correlated to exactly one entity or multiple entities. If the value is set to `false`, the message will be correlated to exactly one entity (execution or process definition). If the value is set to `true`, the message will be correlated to multiple executions and a process definition that can be instantiated by this message in one go.
 * @member {Boolean} all
 * @default false
 */
CorrelationMessageDto.prototype['all'] = false;

/**
 * A Boolean value that indicates whether the result of the correlation should be returned or not. If this property is set to `true`, there will be returned a list of message correlation result objects. Depending on the all property, there will be either one ore more returned results in the list.  The default value is `false`, which means no result will be returned.
 * @member {Boolean} resultEnabled
 * @default false
 */
CorrelationMessageDto.prototype['resultEnabled'] = false;

/**
 * A Boolean value that indicates whether the result of the correlation should contain process variables or not. The parameter resultEnabled should be set to `true` in order to use this it.  The default value is `false`, which means the variables will not be returned.
 * @member {Boolean} variablesInResultEnabled
 * @default false
 */
CorrelationMessageDto.prototype['variablesInResultEnabled'] = false;






export default CorrelationMessageDto;

