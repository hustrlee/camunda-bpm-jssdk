/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProcessDefinitionSuspensionStateDto model module.
 * @module model/ProcessDefinitionSuspensionStateDto
 * @version 7.14.0
 */
class ProcessDefinitionSuspensionStateDto {
    /**
     * Constructs a new <code>ProcessDefinitionSuspensionStateDto</code>.
     * @alias module:model/ProcessDefinitionSuspensionStateDto
     */
    constructor() { 
        
        ProcessDefinitionSuspensionStateDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProcessDefinitionSuspensionStateDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessDefinitionSuspensionStateDto} obj Optional instance to populate.
     * @return {module:model/ProcessDefinitionSuspensionStateDto} The populated <code>ProcessDefinitionSuspensionStateDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessDefinitionSuspensionStateDto();

            if (data.hasOwnProperty('suspended')) {
                obj['suspended'] = ApiClient.convertToType(data['suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('processDefinitionId')) {
                obj['processDefinitionId'] = ApiClient.convertToType(data['processDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionKey')) {
                obj['processDefinitionKey'] = ApiClient.convertToType(data['processDefinitionKey'], 'String');
            }
            if (data.hasOwnProperty('includeProcessInstances')) {
                obj['includeProcessInstances'] = ApiClient.convertToType(data['includeProcessInstances'], 'Boolean');
            }
            if (data.hasOwnProperty('executionDate')) {
                obj['executionDate'] = ApiClient.convertToType(data['executionDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * A `Boolean` value which indicates whether to activate or suspend all process definitions with the given key. When the value is set to `true`, all process definitions with the given key will be suspended and when the value is set to `false`, all process definitions with the given key will be activated.
 * @member {Boolean} suspended
 */
ProcessDefinitionSuspensionStateDto.prototype['suspended'] = undefined;

/**
 * The id of the process definitions to activate or suspend.
 * @member {String} processDefinitionId
 */
ProcessDefinitionSuspensionStateDto.prototype['processDefinitionId'] = undefined;

/**
 *  The key of the process definitions to activate or suspend.
 * @member {String} processDefinitionKey
 */
ProcessDefinitionSuspensionStateDto.prototype['processDefinitionKey'] = undefined;

/**
 * A `Boolean` value which indicates whether to activate or suspend also all process instances of  the process definitions with the given key. When the value is set to `true`, all process instances of the process definitions with the given key will be activated or suspended and when the value is set to `false`, the suspension state of  all process instances of the process definitions with the given key will not be updated.
 * @member {Boolean} includeProcessInstances
 */
ProcessDefinitionSuspensionStateDto.prototype['includeProcessInstances'] = undefined;

/**
 * The date on which all process definitions with the given key will be activated or suspended. If `null`, the suspension state of all process definitions with the given key is updated immediately. By [default](https://docs.camunda.org/manual/7.14/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
 * @member {Date} executionDate
 */
ProcessDefinitionSuspensionStateDto.prototype['executionDate'] = undefined;






export default ProcessDefinitionSuspensionStateDto;

