/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistoricActivityInstanceQueryDtoSorting model module.
 * @module model/HistoricActivityInstanceQueryDtoSorting
 * @version 7.14.0
 */
class HistoricActivityInstanceQueryDtoSorting {
    /**
     * Constructs a new <code>HistoricActivityInstanceQueryDtoSorting</code>.
     * @alias module:model/HistoricActivityInstanceQueryDtoSorting
     */
    constructor() { 
        
        HistoricActivityInstanceQueryDtoSorting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoricActivityInstanceQueryDtoSorting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoricActivityInstanceQueryDtoSorting} obj Optional instance to populate.
     * @return {module:model/HistoricActivityInstanceQueryDtoSorting} The populated <code>HistoricActivityInstanceQueryDtoSorting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoricActivityInstanceQueryDtoSorting();

            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], 'String');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter.
 * @member {module:model/HistoricActivityInstanceQueryDtoSorting.SortByEnum} sortBy
 */
HistoricActivityInstanceQueryDtoSorting.prototype['sortBy'] = undefined;

/**
 * Sort the results in a given order. Values may be `asc` for ascending order or `desc` for descending order. Must be used in conjunction with the sortBy parameter.
 * @member {module:model/HistoricActivityInstanceQueryDtoSorting.SortOrderEnum} sortOrder
 */
HistoricActivityInstanceQueryDtoSorting.prototype['sortOrder'] = undefined;





/**
 * Allowed values for the <code>sortBy</code> property.
 * @enum {String}
 * @readonly
 */
HistoricActivityInstanceQueryDtoSorting['SortByEnum'] = {

    /**
     * value: "activityInstanceId"
     * @const
     */
    "activityInstanceId": "activityInstanceId",

    /**
     * value: "instanceId"
     * @const
     */
    "instanceId": "instanceId",

    /**
     * value: "executionId"
     * @const
     */
    "executionId": "executionId",

    /**
     * value: "activityId"
     * @const
     */
    "activityId": "activityId",

    /**
     * value: "activityName"
     * @const
     */
    "activityName": "activityName",

    /**
     * value: "activityType"
     * @const
     */
    "activityType": "activityType",

    /**
     * value: "startTime"
     * @const
     */
    "startTime": "startTime",

    /**
     * value: "endTime"
     * @const
     */
    "endTime": "endTime",

    /**
     * value: "duration"
     * @const
     */
    "duration": "duration",

    /**
     * value: "definitionId"
     * @const
     */
    "definitionId": "definitionId",

    /**
     * value: "occurrence"
     * @const
     */
    "occurrence": "occurrence",

    /**
     * value: "tenantId"
     * @const
     */
    "tenantId": "tenantId"
};


/**
 * Allowed values for the <code>sortOrder</code> property.
 * @enum {String}
 * @readonly
 */
HistoricActivityInstanceQueryDtoSorting['SortOrderEnum'] = {

    /**
     * value: "asc"
     * @const
     */
    "asc": "asc",

    /**
     * value: "desc"
     * @const
     */
    "desc": "desc"
};



export default HistoricActivityInstanceQueryDtoSorting;

