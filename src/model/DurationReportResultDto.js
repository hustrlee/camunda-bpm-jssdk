/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DurationReportResultDto model module.
 * @module model/DurationReportResultDto
 * @version 7.14.0
 */
class DurationReportResultDto {
    /**
     * Constructs a new <code>DurationReportResultDto</code>.
     * @alias module:model/DurationReportResultDto
     */
    constructor() { 
        
        DurationReportResultDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DurationReportResultDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DurationReportResultDto} obj Optional instance to populate.
     * @return {module:model/DurationReportResultDto} The populated <code>DurationReportResultDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DurationReportResultDto();

            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'Number');
            }
            if (data.hasOwnProperty('periodUnit')) {
                obj['periodUnit'] = ApiClient.convertToType(data['periodUnit'], 'String');
            }
            if (data.hasOwnProperty('minimum')) {
                obj['minimum'] = ApiClient.convertToType(data['minimum'], 'Number');
            }
            if (data.hasOwnProperty('maximum')) {
                obj['maximum'] = ApiClient.convertToType(data['maximum'], 'Number');
            }
            if (data.hasOwnProperty('average')) {
                obj['average'] = ApiClient.convertToType(data['average'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Specifies a timespan within a year. **Note:** The period must be interpreted in conjunction with the returned `periodUnit`.
 * @member {Number} period
 */
DurationReportResultDto.prototype['period'] = undefined;

/**
 * The unit of the given period. Possible values are `MONTH` and `QUARTER`.
 * @member {module:model/DurationReportResultDto.PeriodUnitEnum} periodUnit
 */
DurationReportResultDto.prototype['periodUnit'] = undefined;

/**
 * The smallest duration in milliseconds of all completed process instances which were started in the given period.
 * @member {Number} minimum
 */
DurationReportResultDto.prototype['minimum'] = undefined;

/**
 * The greatest duration in milliseconds of all completed process instances which were started in the given period.
 * @member {Number} maximum
 */
DurationReportResultDto.prototype['maximum'] = undefined;

/**
 * The average duration in milliseconds of all completed process instances which were started in the given period.
 * @member {Number} average
 */
DurationReportResultDto.prototype['average'] = undefined;





/**
 * Allowed values for the <code>periodUnit</code> property.
 * @enum {String}
 * @readonly
 */
DurationReportResultDto['PeriodUnitEnum'] = {

    /**
     * value: "MONTH"
     * @const
     */
    "MONTH": "MONTH",

    /**
     * value: "QUARTER"
     * @const
     */
    "QUARTER": "QUARTER"
};



export default DurationReportResultDto;

