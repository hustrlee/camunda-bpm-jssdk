/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HistoricProcessInstanceQueryDto from './HistoricProcessInstanceQueryDto';
import ProcessInstanceQueryDto from './ProcessInstanceQueryDto';

/**
 * The ProcessInstanceSuspensionStateAsyncDto model module.
 * @module model/ProcessInstanceSuspensionStateAsyncDto
 * @version 7.14.0
 */
class ProcessInstanceSuspensionStateAsyncDto {
    /**
     * Constructs a new <code>ProcessInstanceSuspensionStateAsyncDto</code>.
     * @alias module:model/ProcessInstanceSuspensionStateAsyncDto
     */
    constructor() { 
        
        ProcessInstanceSuspensionStateAsyncDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProcessInstanceSuspensionStateAsyncDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessInstanceSuspensionStateAsyncDto} obj Optional instance to populate.
     * @return {module:model/ProcessInstanceSuspensionStateAsyncDto} The populated <code>ProcessInstanceSuspensionStateAsyncDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessInstanceSuspensionStateAsyncDto();

            if (data.hasOwnProperty('suspended')) {
                obj['suspended'] = ApiClient.convertToType(data['suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('processInstanceIds')) {
                obj['processInstanceIds'] = ApiClient.convertToType(data['processInstanceIds'], ['String']);
            }
            if (data.hasOwnProperty('processInstanceQuery')) {
                obj['processInstanceQuery'] = ProcessInstanceQueryDto.constructFromObject(data['processInstanceQuery']);
            }
            if (data.hasOwnProperty('historicProcessInstanceQuery')) {
                obj['historicProcessInstanceQuery'] = HistoricProcessInstanceQueryDto.constructFromObject(data['historicProcessInstanceQuery']);
            }
        }
        return obj;
    }


}

/**
 * A Boolean value which indicates whether to activate or suspend a given process instance. When the value is set to true, the given process instance will be suspended and when the value is set to false, the given process instance will be activated.
 * @member {Boolean} suspended
 */
ProcessInstanceSuspensionStateAsyncDto.prototype['suspended'] = undefined;

/**
 * A list of process instance ids which defines a group of process instances which will be activated or suspended by the operation.
 * @member {Array.<String>} processInstanceIds
 */
ProcessInstanceSuspensionStateAsyncDto.prototype['processInstanceIds'] = undefined;

/**
 * @member {module:model/ProcessInstanceQueryDto} processInstanceQuery
 */
ProcessInstanceSuspensionStateAsyncDto.prototype['processInstanceQuery'] = undefined;

/**
 * @member {module:model/HistoricProcessInstanceQueryDto} historicProcessInstanceQuery
 */
ProcessInstanceSuspensionStateAsyncDto.prototype['historicProcessInstanceQuery'] = undefined;






export default ProcessInstanceSuspensionStateAsyncDto;

