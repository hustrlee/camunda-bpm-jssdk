/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricsIntervalResultDto model module.
 * @module model/MetricsIntervalResultDto
 * @version 7.14.0
 */
class MetricsIntervalResultDto {
    /**
     * Constructs a new <code>MetricsIntervalResultDto</code>.
     * @alias module:model/MetricsIntervalResultDto
     */
    constructor() { 
        
        MetricsIntervalResultDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricsIntervalResultDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricsIntervalResultDto} obj Optional instance to populate.
     * @return {module:model/MetricsIntervalResultDto} The populated <code>MetricsIntervalResultDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricsIntervalResultDto();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reporter')) {
                obj['reporter'] = ApiClient.convertToType(data['reporter'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The interval timestamp.
 * @member {Date} timestamp
 */
MetricsIntervalResultDto.prototype['timestamp'] = undefined;

/**
 * The name of the metric.
 * @member {String} name
 */
MetricsIntervalResultDto.prototype['name'] = undefined;

/**
 * The reporter of the metric. `null` if the metrics are aggregated by reporter.
 * @member {String} reporter
 */
MetricsIntervalResultDto.prototype['reporter'] = undefined;

/**
 * The value of the metric aggregated by the interval.
 * @member {Number} value
 */
MetricsIntervalResultDto.prototype['value'] = undefined;






export default MetricsIntervalResultDto;

