/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MissingAuthorizationDto model module.
 * @module model/MissingAuthorizationDto
 * @version 7.14.0
 */
class MissingAuthorizationDto {
    /**
     * Constructs a new <code>MissingAuthorizationDto</code>.
     * @alias module:model/MissingAuthorizationDto
     */
    constructor() { 
        
        MissingAuthorizationDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MissingAuthorizationDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MissingAuthorizationDto} obj Optional instance to populate.
     * @return {module:model/MissingAuthorizationDto} The populated <code>MissingAuthorizationDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MissingAuthorizationDto();

            if (data.hasOwnProperty('permissionName')) {
                obj['permissionName'] = ApiClient.convertToType(data['permissionName'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ApiClient.convertToType(data['resourceId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The permission name that the user is missing.
 * @member {String} permissionName
 */
MissingAuthorizationDto.prototype['permissionName'] = undefined;

/**
 * The name of the resource that the user is missing permission for.
 * @member {String} resourceName
 */
MissingAuthorizationDto.prototype['resourceName'] = undefined;

/**
 * The id of the resource that the user is missing permission for.
 * @member {String} resourceId
 */
MissingAuthorizationDto.prototype['resourceId'] = undefined;






export default MissingAuthorizationDto;

