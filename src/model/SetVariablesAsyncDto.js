/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HistoricProcessInstanceQueryDto from './HistoricProcessInstanceQueryDto';
import ProcessInstanceQueryDto from './ProcessInstanceQueryDto';
import VariableValueDto from './VariableValueDto';

/**
 * The SetVariablesAsyncDto model module.
 * @module model/SetVariablesAsyncDto
 * @version 7.14.0
 */
class SetVariablesAsyncDto {
    /**
     * Constructs a new <code>SetVariablesAsyncDto</code>.
     * @alias module:model/SetVariablesAsyncDto
     */
    constructor() { 
        
        SetVariablesAsyncDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SetVariablesAsyncDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetVariablesAsyncDto} obj Optional instance to populate.
     * @return {module:model/SetVariablesAsyncDto} The populated <code>SetVariablesAsyncDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetVariablesAsyncDto();

            if (data.hasOwnProperty('processInstanceIds')) {
                obj['processInstanceIds'] = ApiClient.convertToType(data['processInstanceIds'], ['String']);
            }
            if (data.hasOwnProperty('processInstanceQuery')) {
                obj['processInstanceQuery'] = ProcessInstanceQueryDto.constructFromObject(data['processInstanceQuery']);
            }
            if (data.hasOwnProperty('historicProcessInstanceQuery')) {
                obj['historicProcessInstanceQuery'] = HistoricProcessInstanceQueryDto.constructFromObject(data['historicProcessInstanceQuery']);
            }
            if (data.hasOwnProperty('variables')) {
                obj['variables'] = ApiClient.convertToType(data['variables'], {'String': VariableValueDto});
            }
        }
        return obj;
    }


}

/**
 * A list of process instance ids that define a group of process instances to which the operation will set variables.  Please note that if `processInstanceIds`, `processInstanceQuery` and `historicProcessInstanceQuery` are defined, the resulting operation will be performed on the union of these sets.
 * @member {Array.<String>} processInstanceIds
 */
SetVariablesAsyncDto.prototype['processInstanceIds'] = undefined;

/**
 * @member {module:model/ProcessInstanceQueryDto} processInstanceQuery
 */
SetVariablesAsyncDto.prototype['processInstanceQuery'] = undefined;

/**
 * @member {module:model/HistoricProcessInstanceQueryDto} historicProcessInstanceQuery
 */
SetVariablesAsyncDto.prototype['historicProcessInstanceQuery'] = undefined;

/**
 * A variables the operation will set in the root scope of the process instances.
 * @member {Object.<String, module:model/VariableValueDto>} variables
 */
SetVariablesAsyncDto.prototype['variables'] = undefined;






export default SetVariablesAsyncDto;

