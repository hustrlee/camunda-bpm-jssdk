/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VariableQueryParameterDto model module.
 * @module model/VariableQueryParameterDto
 * @version 7.14.0
 */
class VariableQueryParameterDto {
    /**
     * Constructs a new <code>VariableQueryParameterDto</code>.
     * @alias module:model/VariableQueryParameterDto
     */
    constructor() { 
        
        VariableQueryParameterDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VariableQueryParameterDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VariableQueryParameterDto} obj Optional instance to populate.
     * @return {module:model/VariableQueryParameterDto} The populated <code>VariableQueryParameterDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VariableQueryParameterDto();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
        }
        return obj;
    }


}

/**
 * Variable name
 * @member {String} name
 */
VariableQueryParameterDto.prototype['name'] = undefined;

/**
 * Comparison operator to be used
 * @member {module:model/VariableQueryParameterDto.OperatorEnum} operator
 */
VariableQueryParameterDto.prototype['operator'] = undefined;

/**
 * The variable value, could be of type boolean, string or number
 * @member {Object} value
 */
VariableQueryParameterDto.prototype['value'] = undefined;





/**
 * Allowed values for the <code>operator</code> property.
 * @enum {String}
 * @readonly
 */
VariableQueryParameterDto['OperatorEnum'] = {

    /**
     * value: "eq"
     * @const
     */
    "eq": "eq",

    /**
     * value: "neq"
     * @const
     */
    "neq": "neq",

    /**
     * value: "gt"
     * @const
     */
    "gt": "gt",

    /**
     * value: "gteq"
     * @const
     */
    "gteq": "gteq",

    /**
     * value: "lt"
     * @const
     */
    "lt": "lt",

    /**
     * value: "lteq"
     * @const
     */
    "lteq": "lteq",

    /**
     * value: "like"
     * @const
     */
    "like": "like"
};



export default VariableQueryParameterDto;

