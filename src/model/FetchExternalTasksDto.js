/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FetchExternalTaskTopicDto from './FetchExternalTaskTopicDto';

/**
 * The FetchExternalTasksDto model module.
 * @module model/FetchExternalTasksDto
 * @version 7.14.0
 */
class FetchExternalTasksDto {
    /**
     * Constructs a new <code>FetchExternalTasksDto</code>.
     * @alias module:model/FetchExternalTasksDto
     * @param workerId {String} **Mandatory.** The id of the worker on which behalf tasks are fetched. The returned tasks are locked for that worker and can only be completed when providing the same worker id.
     * @param maxTasks {Number} **Mandatory.** The maximum number of tasks to return.
     */
    constructor(workerId, maxTasks) { 
        
        FetchExternalTasksDto.initialize(this, workerId, maxTasks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workerId, maxTasks) { 
        obj['workerId'] = workerId;
        obj['maxTasks'] = maxTasks;
    }

    /**
     * Constructs a <code>FetchExternalTasksDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FetchExternalTasksDto} obj Optional instance to populate.
     * @return {module:model/FetchExternalTasksDto} The populated <code>FetchExternalTasksDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FetchExternalTasksDto();

            if (data.hasOwnProperty('workerId')) {
                obj['workerId'] = ApiClient.convertToType(data['workerId'], 'String');
            }
            if (data.hasOwnProperty('maxTasks')) {
                obj['maxTasks'] = ApiClient.convertToType(data['maxTasks'], 'Number');
            }
            if (data.hasOwnProperty('usePriority')) {
                obj['usePriority'] = ApiClient.convertToType(data['usePriority'], 'Boolean');
            }
            if (data.hasOwnProperty('asyncResponseTimeout')) {
                obj['asyncResponseTimeout'] = ApiClient.convertToType(data['asyncResponseTimeout'], 'Number');
            }
            if (data.hasOwnProperty('topics')) {
                obj['topics'] = ApiClient.convertToType(data['topics'], [FetchExternalTaskTopicDto]);
            }
        }
        return obj;
    }


}

/**
 * **Mandatory.** The id of the worker on which behalf tasks are fetched. The returned tasks are locked for that worker and can only be completed when providing the same worker id.
 * @member {String} workerId
 */
FetchExternalTasksDto.prototype['workerId'] = undefined;

/**
 * **Mandatory.** The maximum number of tasks to return.
 * @member {Number} maxTasks
 */
FetchExternalTasksDto.prototype['maxTasks'] = undefined;

/**
 * A `boolean` value, which indicates whether the task should be fetched based on its priority or arbitrarily.
 * @member {Boolean} usePriority
 */
FetchExternalTasksDto.prototype['usePriority'] = undefined;

/**
 * The [Long Polling](https://docs.camunda.org/manual/7.14/user-guide/process-engine/external-tasks/#long-polling-to-fetch-and-lock-external-tasks) timeout in milliseconds.  **Note:** The value cannot be set larger than 1.800.000 milliseconds (corresponds to 30 minutes).
 * @member {Number} asyncResponseTimeout
 */
FetchExternalTasksDto.prototype['asyncResponseTimeout'] = undefined;

/**
 * A JSON array of topic objects for which external tasks should be fetched. The returned tasks may be arbitrarily distributed among these topics. Each topic object has the following properties:
 * @member {Array.<module:model/FetchExternalTaskTopicDto>} topics
 */
FetchExternalTasksDto.prototype['topics'] = undefined;






export default FetchExternalTasksDto;

